计算机操作系统

第一章
=================================
程序从一个源文件开始，实际上是0和1组成的位序列，8个位组成一个字节。hello.c文件是以字节序列的方式存储在
文件中的，每个字节都有一个整数值。像这样只由ASCII字符构成的文件称为文本文件，所有其他文件都是二进制文件。

=================================
翻译过程：
	gcc编译器驱动程序读取源程序文件hello.c,翻译成一个可执行文件。分为4个阶段：预处理，编译，汇编，链接器
	预处理：根据 “#” 字符，选择相应的头文件内容，直接插入到源程序中，形成新的文件hello.i
	编译：  编译器将hello.i 翻译成hello.s,包含一个汇编语言程序
	汇编：汇编器将hello.s翻译成机器语言的指令，将这些指令打包成“可重定位目标程序”的格式，并将结果保存在
		  标文件hello.o（二进制文件）中，
	链接：hello程序调用了printf函数，printf函数存在于一个名为"printf.0"的单独的预编译好了的文件中，并且
		  链接将负责把这个文件嵌入到我们的hello.o程序中。
	结果：得到了hello文件，可执行目标文件

=================================
系统的硬件组成：
			总线：携带字节信息，并负责在各个部件之间传递。
			IO设备：每个IO设备都通过控制器/适配器与IO总线相连
			主存：临时存储设备，在处理器执行程序时，用来存放程序和程序处理的数据。从逻辑上来说，存储器
			   		 是一个线性的字节数组，每个字节都有唯一的地址，地址从0开始。
			CPU：解释存储在主存中的指令的引擎。核心是一个大小为一个字节的存储设备（寄存器）
			   		称为程序计数器(pc),任何时候pc指向主存中的某一条机器语言指令。CPU从pc指向的内存出读取
			   		指令，解释，执行指令指示的简单操作。然后更新pc，让其指向下一条指令。而这条指令并不一定
			   		和内存中刚执行的指令相邻。
			概述：用户输入运行指令后，shell程序将字符逐一读入寄存器，再把它放入到内存中，当敲击回车时，命
				  令输入完毕，shell执行一系列指令来加载可执行的hello文件，指令将hello目标文件中的代码和数
				  据从磁盘复制到主存,CPU就开始执行hello程序的main函数中的机器语言指令将输出的hello
				   world 字符串字节从主存复制到寄存器文件，再从寄存器文件复制到显示设备.
			hello程序的机器指令：磁盘->加载时：主存->运行：处理器
			数据：磁盘->主存->显示设备
=================================
高速缓存的重要性：
		读取速度：磁盘<主存<寄存器
=================================
存储设备的层次结构：
		寄存器->高速缓存(L1,L2,L3)->主存->本地存储->远程存储
=================================
OS：
		OS：看成是应用程序和硬件之间的插入的一层软件。基本功能：1.防止硬件被失控的应用程序滥用 2.向应用程序提
			供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备。通过（进程，虚拟内存和文件来实现这两个功能
			文件是对IO设备的抽象表示，虚拟内存是对主存和磁盘IO的抽象表示，进程则是对处理器，主存，IO设备的抽象表示

=================================
进程：
		上下文：OS需要保持跟踪进程运行所需要的所有状态信息。这种状态信息：上下文。当OS决定要把控制权从进程
		之间切换时，就会执行上下文切换，保存当前进程的上下文，回复新进程的上下文。然后将控制进程权传递到
		新进程。新进程就会从他上次停止的地方开始。进程切换是有os的内核管理的。内核就是OS代码常驻主存的部分。
		内核：系统管理全部进程所有代码和数据结构的集合。
=================================
虚拟内存：
		为每个进程提供了一个假象：每个进程都在独占主存。每个进程看到的主存都是一致的，称为虚拟地址空间。
		在linux中，地址空间最上面的区域是保留给os中的代码和数据结构的，这对所有进程来说都是一样的。地址空间
		底部区域存放用户进程定义的代码和数据。
		从小到大：程序代码和数据->运行时堆->共享库：C标准库或者数学库->栈：顶部：用户栈实现函数调用->
		调用函数：栈增大->内核虚拟内存
=================================
文件：
		就是字节序列。每个IO设备，包括磁盘，键盘显示器，甚至网络。
=================================
系统间通信：
		






